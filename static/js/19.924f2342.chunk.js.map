{"version":3,"file":"static/js/19.924f2342.chunk.js","mappings":"ySAKaA,GAAiBC,EAAAA,EAAAA,eAAc,MA2D5CD,EAAeE,UAAY,CACzBC,MAAOC,IAAAA,OAGT,UA7DqB,WAAO,IAAD,EACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOJ,EAAP,KAAcK,EAAd,KAEMC,EAAG,6CAAyCJ,EAAzC,oBADO,mCACP,mBAgBT,OAdAK,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,+GAEQC,MAAMH,GAFd,cAETI,EAFS,gBAGIA,EAASC,OAHb,OAGTC,EAHS,OAIfP,EAASO,GACTC,QAAQC,IAAIF,GALG,kDAOfC,QAAQE,MAAR,MAPe,0DAAH,qDAUhBP,GACD,GAAE,CAACF,KAGF,SAACT,EAAemB,SAAhB,CAAyBC,MAAOf,EAAhC,UACE,kBAAMgB,UAAWC,EAAAA,EAAAA,KAAjB,UACGnB,EAAMoB,aACL,gBACEF,UAAWC,EAAAA,EAAAA,OACXE,IAAG,yCAAoCrB,EAAMoB,aAC7CE,IAAI,kBAGN,gDAEF,iBAAKJ,UAAWC,EAAAA,EAAAA,KAAhB,WACE,wBAAKnB,EAAMuB,SACX,wCAAgBvB,EAAMwB,iBACtB,sCACA,uBAAIxB,EAAMyB,YACV,oCACA,iCACGzB,EAAM0B,cADT,aACG,EAAcC,KAAI,SAAAC,GAAK,OACtB,4BAAwBA,EAAMC,KAA9B,MAAWD,EAAMC,KADK,UAK5B,iBAAKX,UAAWC,EAAAA,EAAAA,eAAhB,WACE,mDACA,SAAC,EAAAW,KAAD,CAAMC,GAAG,OAAT,mBACA,SAAC,EAAAD,KAAD,CAAMC,GAAG,UAAT,yBAEF,gBAAKb,UAAWC,EAAAA,EAAAA,OAAhB,UACE,SAAC,KAAD,UAKT,C,gHCZD,UA7CgB,WACd,IAAMjB,GAAU8B,EAAAA,EAAAA,YAAWnC,EAAAA,gBAErBS,EAAG,6CAAyCJ,EAAzC,4BADO,mCACP,0BAET,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAO6B,EAAP,KAAgBC,EAAhB,KAoBA,OAlBA3B,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,+GAEQC,MAAMH,GAFd,cAETI,EAFS,gBAGIA,EAASC,OAHb,OAGTC,EAHS,OAIfsB,EAAWtB,EAAKuB,SAChBtB,QAAQC,IAAIF,EAAKuB,SALF,kDAOftB,QAAQE,MAAR,MAPe,0DAAH,qDAUhBP,GACD,GAAE,CAACF,KAEJC,EAAAA,EAAAA,YAAU,WAET,KAGC,8BACsB,IAAnB0B,EAAQG,OACLH,EAAQN,KAAI,SAAAU,GACV,OACE,gCACE,qCAAaA,EAAOC,WACpB,wBAAIC,EAAAA,EAAAA,IAAMF,EAAOG,aAFLH,EAAOI,GAKxB,IACD,wBAGT,C,qBC3CD,KAAgB,KAAO,4BAA4B,OAAS,8BAA8B,KAAO,4BAA4B,eAAiB,sCAAsC,OAAS,8BAA8B,MAAQ,6BAA6B,QAAU,+B","sources":["components/MovieDetails/MovieDetails.jsx","components/MovieDetails/Reviews.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieDetails/movie-details.module.css?79a2"],"sourcesContent":["import { createContext, useEffect, useState } from 'react';\nimport { Link, Outlet, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './movie-details.module.css';\n\nexport const MovieIdContext = createContext(null);\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const API_KEY = '7bfaca5914dfe808eee9ce7ecac1ff40';\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const response = await fetch(URL);\n        const data = await response.json();\n        setMovie(data);\n        console.log(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMovie();\n  }, [URL]);\n\n  return (\n    <MovieIdContext.Provider value={movieId}>\n      <main className={css.main}>\n        {movie.poster_path ? (\n          <img\n            className={css.poster}\n            src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n            alt=\"Movie poster\"\n          ></img>\n        ) : (\n          <p>Image not available</p>\n        )}\n        <div className={css.info}>\n          <h1>{movie.title}</h1>\n          <p>User Score: {movie.vote_average}</p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <p>\n            {movie.genres?.map(genre => (\n              <span key={genre.name}>{genre.name} </span>\n            ))}\n          </p>\n        </div>\n        <div className={css.additionalInfo}>\n          <p>additional information</p>\n          <Link to=\"cast\">Cast</Link>\n          <Link to=\"reviews\">Reviews</Link>\n        </div>\n        <div className={css.outlet}>\n          <Outlet />\n        </div>\n      </main>\n    </MovieIdContext.Provider>\n  );\n};\n\nMovieIdContext.propTypes = {\n  movie: PropTypes.array,\n};\n\nexport default MovieDetails;\n","import { useContext, useEffect, useState } from 'react';\nimport { MovieIdContext } from './MovieDetails.jsx';\nimport PropTypes from 'prop-types';\nimport parse from 'html-react-parser';\n\nconst Reviews = () => {\n  const movieId = useContext(MovieIdContext);\n  const API_KEY = '7bfaca5914dfe808eee9ce7ecac1ff40';\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const response = await fetch(URL);\n        const data = await response.json();\n        setReviews(data.results);\n        console.log(data.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMovie();\n  }, [URL]);\n\n  useEffect(() => {\n    // console.log('Reviews: ', reviews[0].author);\n  });\n\n  return (\n    <>\n      {reviews.length !== 0\n        ? reviews.map(review => {\n            return (\n              <article key={review.id}>\n                <h2>Author: {review.author}</h2>\n                <p>{parse(review.content)}</p>\n              </article>\n            );\n          })\n        : 'There are no reviews'}\n    </>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.array,\n};\n\nexport default Reviews;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"movie-details_main__XdGgG\",\"poster\":\"movie-details_poster__YzoTv\",\"info\":\"movie-details_info__avR+w\",\"additionalInfo\":\"movie-details_additionalInfo__8Ud7N\",\"outlet\":\"movie-details_outlet__QnIyV\",\"actor\":\"movie-details_actor__3-6nN\",\"details\":\"movie-details_details__hMk1F\"};"],"names":["MovieIdContext","createContext","propTypes","movie","PropTypes","movieId","useParams","useState","setMovie","URL","useEffect","fetchMovie","fetch","response","json","data","console","log","error","Provider","value","className","css","poster_path","src","alt","title","vote_average","overview","genres","map","genre","name","Link","to","useContext","reviews","setReviews","results","length","review","author","parse","content","id"],"sourceRoot":""}